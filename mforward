const {

  forwardOrBroadCast,

  bot,

  parsedJid,

  genThumbnail,

} = require('../lib/')

const axios = require('axios')

const url1 = 'https://files.catbox.moe/tb1s1q.jpeg' // Working image

// Function to fetch image buffer

const getBuffer = async (url) => {

  try {

    const res = await axios.get(url, { responseType: 'arraybuffer' })

    return { buffer: Buffer.from(res.data) }

  } catch (err) {

    console.error('Error in getBuffer:', err)

    return { buffer: null }

  }

}

bot(

  {

    pattern: 'mforward ?(.*)',

    fromMe: true,

    desc: 'forward replied msg',

    type: 'misc',

  },

  async (message, match) => {

    if (!message.reply_message)

      return await message.send('*Reply to a message*')

    if (!match.trim())

      return await message.send('*Give me JID(s)*\n_Example:_ `.mforward jid1 jid2 ...`')

    const buff1 = await getBuffer(url1)

    if (!buff1.buffer)

      return await message.send('❌ Failed to load thumbnail image.')

    const options = {

      contextInfo: {

        forwardingScore: 5,

        isForwarded: true,

      },

      linkPreview: {

        head: '𝐍𝐞𝐳𝐮𝐤𝐨',

        body: '𝐀 𝐦𝐞𝐬𝐬𝐚𝐠𝐞 𝐟𝐫𝐨𝐦 𝐍𝐞𝐳𝐮𝐤𝐨💌',

        mediaType: 2,

        thumbnail: buff1.buffer,

        sourceUrl: 'https://zenox-io.vercel.app/',

      },

      quoted: {

        key: {

          fromMe: false,

          participant: '0@s.whatsapp.net',

          remoteJid: 'status@broadcast',

        },

        message: {

          imageMessage: {

            jpegThumbnail: await genThumbnail(buff1.buffer),

            caption: '∞',

          },

        },

      },

    }

    if (message.reply_message.audio) {

      options.waveform = [90, 60, 88, 45, 0, 0, 0, 45, 88, 28, 9]

      options.duration = 999999

      options.ptt = true

    }

    try {

      for (const jid of parsedJid(match)) {

        await forwardOrBroadCast(jid, message, options)

      }

      await message.send('✅ Forwarded successfully.')

    } catch (err) {

      console.error('Error in mforward:', err)

      await message.send('❌ Error while forwarding.')

    }

  }

)
